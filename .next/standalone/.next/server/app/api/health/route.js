(()=>{var e={};e.id=772,e.ids=[772],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},7275:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>h,routeModule:()=>p,serverHooks:()=>l,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>d});var s={};r.r(s),r.d(s,{GET:()=>u});var n=r(6559),a=r(8088),o=r(7719),i=r(2190);async function u(){try{let e={status:"healthy",timestamp:new Date().toISOString(),uptime:process.uptime(),environment:"production",version:process.env.npm_package_version||"1.0.0"};return i.NextResponse.json(e,{status:200})}catch{return i.NextResponse.json({status:"unhealthy",error:"Health check failed",timestamp:new Date().toISOString()},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/Users/rolfbekkelund/Documents/Juvo Solutions/Repositories/UX-finall/UX-final/src/app/api/health/route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:d,serverHooks:l}=p;function h(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:d})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(7275));module.exports=s})();